"use strict";(self.webpackChunkpetr_leontev_tech_blog=self.webpackChunkpetr_leontev_tech_blog||[]).push([[620],{7414:function(e,n,t){t.r(n),t.d(n,{default:function(){return S}});var l=t(5276),a=t(8453),o=t(6540);function r(e){const n=Object.assign({p:"p",pre:"pre",code:"code",strong:"strong",em:"em",a:"a"},(0,a.RP)(),e.components);return o.createElement(o.Fragment,null,o.createElement(n.p,null,"Imagine the following situation in Unreal Engine 4 gameplay code:"),"\n",o.createElement(n.pre,null,o.createElement(n.code,{className:"language-cpp"},"APlayer::OnAttacked()\n{\n    USoundSystem* SoundSystem = GameInstance->GetSoundSystem();\n    if (IsValid(SoundSystem))\n    {\n        SoundSystem->PlaySoundCue(OnAttackedSoundCue);\n    }\n}\n")),"\n",o.createElement(n.p,null,o.createElement(n.strong,null,"SoundSystem")," can be invalid but what does that mean? Is it OK situation to just use ",o.createElement(n.em,null,"IsValid()")," and do nothing otherwise? This issue is more interesting that it seems."),"\n",o.createElement(n.p,null,"Good question to start with is if ",o.createElement(n.strong,null,"SoundSystem")," is not valid in ",o.createElement(n.em,null,"OnAttacked()")," context then maybe we should tell someone about it? To do that one can use multiple methods: return values, delegates calling, writing some error message to log... but wait! ",o.createElement(n.strong,null,"SoundSystem")," is not valid!"),"\n",o.createElement(n.p,null,"When a game system is not valid then what do we can to do? Well, let's get an instance of that system because it should be created already, right?"),"\n",o.createElement(n.pre,null,o.createElement(n.code,{className:"language-cpp"},"APlayer::OnAttacked()\n{\n    USoundSystem* SoundSystem = nullptr;\n    if (!IsValid(SoundSystem))\n    {\n        SoundSystem = GameInstance->GetSoundSystem();\n    }\n\n    SoundSystem->PlaySoundCue(OnAttackedSoundCue);\n}\n")),"\n",o.createElement(n.p,null,"But should we use ",o.createElement(n.em,null,"IsValid()")," again just to be sure SoundSystem we've got is valid? It seems like we are going to have a infinite loop here."),"\n",o.createElement(n.p,null,"Another way to fix this problem is to put SoundSystem initialization into ",o.createElement(n.em,null,"APlayer")," method that can guarantee ",o.createElement(n.em,null,"SoundSystem")," is initialized:"),"\n",o.createElement(n.pre,null,o.createElement(n.code,{className:"language-cpp"},"\n// .h\nclass APlayer : AActor\n{\n    ...\nprivate:\n    UPROPERTY()\n    USoundSystem* SoundSystem;\n};\n\n\n// .cpp\nAPlayer::APlayer()\n{\n    SoundSystem = nullptr;\n}\n\nAPlayer::PostSoundSystemInitialize()\n{\n    SoundSystem = GameInstance->GetSoundSystem();\n}\n\nAPlayer::OnAttacked()\n{\n    if (IsValid(SoundSystem))\n    {\n        SoundSystem->PlaySoundCue(OnAttackedSoundCue);\n    }\n}\n")),"\n",o.createElement(n.p,null,"Notice that we fixed our issue with checking SoundSystem pointer in ",o.createElement(n.em,null,"OnAttacked()")," method but still don't know what to do if it is somehow invalid."),"\n",o.createElement(n.p,null,"Additional question is what if we don't want to store ",o.createElement(n.em,null,"SoundSystem")," pointer in ",o.createElement(n.em,null,"APlayer"),"? Imagine one has ",o.createElement(n.em,null,"AEnemy"),", ",o.createElement(n.em,null,"AEnemyTank"),", ",o.createElement(n.em,null,"AEnemyTower")," instead of only APlayer and all those classes have to have ability to play sound cue."),"\n",o.createElement(n.p,null,'I think good solution is to divide all pointer checks into "soft" and "hard" ones. Soft check is when a program can continue execution. Hard one is when we tell a program to stop the execution.'),"\n",o.createElement(n.p,null,'In our case we need "hard" check of ',o.createElement(n.em,null,"SoundSystem")," pointer because otherwise that means something is totally wrong with game systems initialization process."),"\n",o.createElement(n.p,null,'How to do "hard" checks in Unreal Engine 4 C++? There are many ways according to official ',o.createElement(n.a,{href:"https://www.google.comhttps://docs.unrealengine.com/en-us/Programming"},"documentation"),":"),"\n",o.createElement(n.pre,null,o.createElement(n.code,{className:"language-cpp"},"* check\n* checkf\n* verify\n* verifyf\n* checkSlow\n* checkfSlow\n* verifySlow\n")),"\n",o.createElement(n.p,null,"Any of above macroses will halt the execution of the program and that is exactly what we need!"),"\n",o.createElement(n.p,null,"Result:"),"\n",o.createElement(n.pre,null,o.createElement(n.code,{className:"language-cpp"},"APlayer::OnAttacked()\n{\n    USoundSystem* SoundSystem = GameInstance->GetSoundSystem();\n    check(SoundSystem); // or check(IsValid(SoundSystem))\n\n    SoundSystem->PlaySoundCue(OnAttackedSoundCue);\n}\n")),"\n",o.createElement(n.p,null,"As a conclusion I will also say that default engine macroses ",o.createElement(n.em,null,"checkSlow"),", ",o.createElement(n.em,null,"checkfSlow"),", ",o.createElement(n.em,null,"verifySlow")," are especially good if you need to check a pointer only in a debug version of your code."))}var i,c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,a.RP)(),e.components);return n?o.createElement(n,e,o.createElement(r,e)):r(e)},s=t(4810),m=t(2071),u=t(9935),d=t(7528),p=t(5765),h=t(1392);const g=(0,t(2568).DU)(i||(i=(0,l.A)(["\n  ","  \n  \n  pre code {\n    margin: 0;\n    padding: 0;\n    white-space: pre;\n    border: none;\n    background: transparent;\n  }\n  \n  .highlight pre {\n    background-color: #f8f8f8;\n    border: 1px solid #cccccc;\n    font-size: 13px;\n    line-height: 19px;\n    overflow: auto;\n    padding: 6px 10px;\n    border-radius: 3px;\n  }\n  \n  pre {\n    margin-top: -15px;\n    margin-bottom: 5px;\n    background-color: #f8f8f8;\n    border: 1px solid #cccccc;\n    font-size: 13px;\n    line-height: 19px;\n    overflow: auto;\n    padding: 6px 10px;\n    border-radius: 3px;\n  }\n  \n  pre code, pre tt {\n    background-color: transparent;\n    border: none;\n  }\n\n"])),(()=>null));function y(e){let{location:n,data:t,pageContext:l,children:r}=e;const i=t.site.siteMetadata.title,{previous:c,next:y}=l,S=t.mdx,E={shortname:t.site.siteMetadata.disqusID,config:{identifier:S.frontmatter.title,siteTitle:i}};return o.createElement(u.A,null,o.createElement(s.N_,{to:"/"},o.createElement("h3",{style:{margin:0,marginBottom:(0,p.di)(2)}},"Blog")),o.createElement(m.A,{location:n,title:i},o.createElement(d.A,{title:S.frontmatter.title,description:S.frontmatter.description,keywords:["blog","unreal engine"]}),o.createElement("h4",{style:{marginBottom:7,marginTop:0}},o.createElement("i",null,S.frontmatter.title)),o.createElement("p",{style:{...(0,p.hs)(-.2),display:"block",marginBottom:(0,p.di)(1/3),marginTop:0}},S.frontmatter.date),o.createElement(g),o.createElement(a.xA,null,r),o.createElement("hr",{style:{marginBottom:(0,p.di)(1)}}),o.createElement("div",null,o.createElement("ul",{style:{display:"flex",flexWrap:"wrap",justifyContent:"space-between",listStyle:"none",padding:0,marginLeft:0}},o.createElement("li",null,c&&o.createElement(s.N_,{to:c.frontmatter.slug,rel:"prev"},"← ",o.createElement("i",null,c.frontmatter.title))),o.createElement("li",null,y&&o.createElement(s.N_,{to:y.frontmatter.slug,rel:"next"},o.createElement("i",null,y.frontmatter.title)," →")))),o.createElement(h.Mq,E)))}function S(e){return o.createElement(y,e,o.createElement(c,e))}}}]);
//# sourceMappingURL=component---src-templates-blog-post-js-content-file-path-home-runner-work-raian-github-io-raian-github-io-content-blog-c-pointers-index-mdx-6aacd156f86e84ac1841.js.map