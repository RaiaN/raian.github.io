{"version":3,"file":"component---src-pages-index-js-e301c7038ba963027aa9.js","mappings":"6LAAyB,IAEJA,EAAU,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAS5B,OAT4BC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UAC7BC,OAAA,WACE,MAAM,SAAEC,GAAaC,KAAKC,MAE1B,OACEC,EAAAA,cAAA,WACEA,EAAAA,cAAA,YAAOH,GAGb,EAACP,CAAA,CAT4B,CAASU,EAAAA,U,yDCUxC,SAASC,EAAGC,GAAgD,IAA/C,YAAEC,EAAW,KAAEC,EAAI,KAAEC,EAAI,SAAEC,EAAQ,MAAEC,GAAOL,EACvD,MAAM,KAAEM,IAASC,EAAAA,EAAAA,IAAe,cAa1BC,EAAkBP,GAAeK,EAAKG,aAAaR,YAEzD,OACEH,EAAAA,cAACY,EAAAA,EAAM,CACLC,eAAgB,CACdT,QAEFU,cAAa,QAAUP,EACvBF,KAAM,CACJ,CACEU,KAAK,cACLC,QAASN,GAEX,CACEO,SAAS,WACTD,QAAST,GAEX,CACEU,SAAS,iBACTD,QAASN,GAEX,CACEO,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASR,EAAKG,aAAaO,QAE7B,CACEH,KAAK,gBACLC,QAAST,GAEX,CACEQ,KAAK,sBACLC,QAASN,IAGVS,OACCb,EAASc,OAAS,EACd,CACEL,KAAK,WACLC,QAASV,EAASe,KAAK,OAEzB,IAELF,OAAOd,IAGhB,CAEAJ,EAAIqB,aAAe,CACjBlB,KAAK,KACLC,KAAM,GACNC,SAAU,GACVH,YAAY,IAWd,K,iICzFA,MAgEaoB,EAAOA,IAAMvB,EAAAA,cAACC,EAAAA,EAAG,CAACM,MAAM,oCAErC,UAlEkBL,IAAyB,IAAxB,SAAEsB,EAAQ,KAAEC,GAAMvB,EACnC,OACEF,EAAAA,cAAC0B,EAAAA,EAAM,KACL1B,EAAAA,cAAA,MAAI2B,MAAO,CAACC,OAAQ,EAAGC,cAAcC,EAAAA,EAAAA,IAAO,KAAM,QAClD9B,EAAAA,cAACV,EAAAA,EAAU,CAACkC,SAAUA,GACpBxB,EAAAA,cAACC,EAAAA,EAAG,CACFM,MAAM,OACND,SAAU,CAAC,gBAAD,2DAGVmB,EAAKM,OAAOC,MAAMC,KAAKC,GACrBlC,EAAAA,cAAA,OAAKmC,IAAKD,EAAKE,YAAYC,KAAMV,MAAO,CAAEE,cAAcC,EAAAA,EAAAA,IAAO,KAC7D9B,EAAAA,cAAA,MACE2B,MAAO,CACHE,aAAc,EACdS,UAAW,IAGftC,EAAAA,cAACuC,EAAAA,GAAI,CAACZ,MAAO,CAAEa,UAAU,QAAWC,GAAIP,EAAKE,YAAYC,MACtDH,EAAKE,YAAY7B,QAGtBP,EAAAA,cAAA,KACE2B,MAAO,KACFe,EAAAA,EAAAA,KAAM,IACTC,QAAQ,QACRd,cAAcC,EAAAA,EAAAA,IAAO,EAAE,GACvBQ,UAAW,IAGZJ,EAAKE,YAAYQ,MAEpB5C,EAAAA,cAAA,WACEA,EAAAA,cAAA,KACE6C,wBAAyB,CACvBC,OAAQZ,EAAKE,YAAYjC,oBAQhC,C","sources":["webpack://petr_leontev_tech_blog/./src/components/blogLayout.js","webpack://petr_leontev_tech_blog/./src/components/seo.js","webpack://petr_leontev_tech_blog/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\n\nexport default class BlogLayout extends React.Component {\n  render() {\n    const { children } = this.props    \n\n    return (\n      <div>\n        <main>{children}</main>\n      </div>\n    )\n  }\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            description,\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      titleTemplate={`%s | ${title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo;\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport BlogLayout from \"../components/blogLayout\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst IndexPage = ({ location, data }) => {\n  return (\n    <Layout>\n      <h3 style={{margin: 0, marginBottom: rhythm(2) }}>Blog</h3>\n      <BlogLayout location={location}>\n        <Seo\n          title=\"Blog\"\n          keywords={[`unreal engine`, `blog`, `developers`, `rendering`, `aws`, `tech leadership`]}\n        />\n        {\n          data.allMdx.nodes.map((node) => (\n            <div key={node.frontmatter.slug} style={{ marginBottom: rhythm(2) }}>\n              <h4\n                style={{\n                    marginBottom: 7,\n                    marginTop: 0\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.frontmatter.slug}>\n                  {node.frontmatter.title}\n                </Link>\n              </h4>\n              <p\n                style={{\n                  ...scale(-1 / 5),\n                  display: `block`,\n                  marginBottom: rhythm(1/3),\n                  marginTop: 0,\n                }}\n              >\n                {node.frontmatter.date}\n              </p>\n              <div>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description,\n                  }}\n                />\n              </div>\n            </div>\n          ))\n        }\n      </BlogLayout>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMdx(sort: {frontmatter: {date: DESC}}) {\n      nodes {\n        id\n        excerpt\n        frontmatter {\n          slug\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n\nexport const Head = () => <Seo title=\"Expert Unreal Engine Blog Posts\" />\n\nexport default IndexPage;"],"names":["BlogLayout","_React$Component","apply","arguments","_inheritsLoose","prototype","render","children","this","props","React","Seo","_ref","description","lang","meta","keywords","title","site","useStaticQuery","metaDescription","siteMetadata","Helmet","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","Head","location","data","Layout","style","margin","marginBottom","rhythm","allMdx","nodes","map","node","key","frontmatter","slug","marginTop","Link","boxShadow","to","scale","display","date","dangerouslySetInnerHTML","__html"],"sourceRoot":""}